{% for property in model.properties %}{#
#}{% if property.typeModel.name != "integer" and property.typeModel.aliasTypeName != "integer" and property.typeModel.name != "number" and property.typeModel.aliasTypeName != "number" and property.typeModel.name != "string" and property.typeModel.aliasTypeName != "string" and property.typeModel.name != "boolean" and property.typeModel.aliasTypeName != "boolean" %}import 'package:melontouch/domain/{{ property.typeModel.name|camelCaseToSnakeCase }}.dart';
{% endif %}{% endfor %}
{% for line in model.description|splitLines %}
/// {{ line }}{% endfor %}
class {{ model.name }}{{ '{' }}{#
	#}{% for property in model.properties %}
	{% for line in property.description|splitLines %}
	/// {{ line }}{% endfor %}
	final {% if property.typeModel.isArray %}List<{% endif %}{#
	#}{% if property.typeModel.name == "integer" or property.typeModel.aliasTypeName == "integer" %}int{#
    #}{% elif property.typeModel.name == "number" or property.typeModel.aliasTypeName == "number" %}double{#
    #}{% elif property.typeModel.name == "string" or property.typeModel.aliasTypeName == "string" %}String{#
    #}{% elif property.typeModel.name == "boolean" or property.typeModel.aliasTypeName == "boolean" %}bool{#
    #}{% else %}{{ property.typeModel.name }}{% endif %}{#
    #}{% if property.typeModel.isArray %}>{% endif %}{#
	#}{% if property.isNullable %}?{% endif %} {{ property.name|snakeCaseToCamelCase }};{% endfor %}

    {% for line in model.description|splitLines %}
    /// {{ line }}{% endfor %}
	const {{ model.name }}({
		{% for property in model.properties %}{% if property.isNullable != true %}required {% endif %}this.{{ property.name|snakeCaseToCamelCase }},{% if not forloop.last %}
		{% endif %}{% endfor %}
	});
}
